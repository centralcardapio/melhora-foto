// Teste para verificar se o estilo estÃ¡ sendo salvo corretamente
console.log('ðŸ§ª Testando correÃ§Ã£o de estilo...\n');

// Simular dados como seriam salvos no banco
const mockTransformation = {
  id: 'test-123',
  transformed_images: [
    {
      url: 'https://example.com/image1.jpg',
      downloadUrl: 'https://example.com/download1.jpg',
      version: 1,
      feedback: '',
      style: 'moderno-gourmet', // Agora sempre salva o estilo do usuÃ¡rio
      ai_description: 'Imagem transformada no estilo Moderno Gourmet',
      created_at: new Date().toISOString()
    }
  ]
};

// FunÃ§Ã£o de formataÃ§Ã£o (mesma do PhotoResults)
function formatStyleName(style) {
  const styleNames = {
    'classico-italiano': 'ClÃ¡ssico Italiano',
    'pub-moderno': 'Pub Moderno',
    'cafe-aconchegante': 'CafÃ© Aconchegante',
    'rustico-madeira': 'RÃºstico de Madeira',
    'contemporaneo-asiatico': 'ContemporÃ¢neo AsiÃ¡tico',
    'moderno-gourmet': 'Moderno Gourmet',
    'saudavel-vibrante': 'SaudÃ¡vel & Vibrante',
    'clean-minimalista': 'Clean & Minimalista',
    'alta-gastronomia': 'Alta Gastronomia'
  };

  return styleNames[style] || style.replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase());
}

console.log('ðŸ“Š Dados da transformaÃ§Ã£o:');
console.log(`   ID: ${mockTransformation.id}`);
console.log(`   Estilo salvo: ${mockTransformation.transformed_images[0].style}`);
console.log(`   Estilo formatado: ${formatStyleName(mockTransformation.transformed_images[0].style)}`);

console.log('\nðŸ“± ExibiÃ§Ã£o na interface:');
console.log(`   TÃ­tulo: Foto Profissional (${formatStyleName(mockTransformation.transformed_images[0].style)})`);
console.log(`   Badge: IA: ${formatStyleName(mockTransformation.transformed_images[0].style)}`);

console.log('\nâœ… Teste concluÃ­do!');
console.log('\nðŸ’¡ Se ainda aparecer "Custom_prompt", execute o script fix-style-data.js para corrigir dados antigos.');
